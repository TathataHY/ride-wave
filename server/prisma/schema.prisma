// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  name              String?
  phone_number      String   @unique
  email             String?  @unique
  notificationToken String?
  ratings           Float    @default(0)
  totalRides        Float    @default(0)
  cratedAt          DateTime @default(now())
  updatedAt         DateTime @updatedAt
  rides             Rides[]  @relation("UserRides")
}

enum VehicleType {
  Car
  Motorcycle
  CNG
}

model Driver {
  id                  String      @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  country             String
  phone_number        String      @unique
  email               String      @unique
  vehicle_type        VehicleType
  registration_number String      @unique
  registration_date   String
  driving_license     String
  vehicle_color       String?
  rate                String
  notificationToken   String?
  ratings             Float       @default(0)
  totalEarning        Float       @default(0)
  totalRides          Float       @default(0)
  pendingRides        Float       @default(0)
  cancelRides         Float       @default(0)
  status              String      @default("inactive")
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
  rides               Rides[]     @relation("DriverRides")
}

model Rides {
  id                      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId                  String   @db.ObjectId
  driverId                String   @db.ObjectId
  charge                  Float
  currentLocationName     String
  destinationLocationName String
  distance                String
  status                  String
  rating                  Float?
  user                    User     @relation("UserRides", fields: [userId], references: [id])
  driver                  Driver   @relation("DriverRides", fields: [driverId], references: [id])
  cratedAt                DateTime @default(now())
  updatedAt               DateTime @updatedAt
}
